{"version":3,"sources":["./Weather/src/app/favorite/favorite.component.ts","./Weather/src/app/favorite/favorite.component.html","./Weather/src/app/shared/weather.service.ts","./Weather/src/app/search/search.service.ts","./Weather/src/app/app-routing.module.ts","./Weather/src/app/app.component.ts","./Weather/src/app/app.component.html","./Weather/src/app/search/search.component.ts","./Weather/src/app/search/search.component.html","./Weather/src/app/app.module.ts","./Weather/src/app/favorite/favorite.service.ts","./Weather/src/environments/environment.ts","./Weather/$_lazy_route_resource lazy namespace object","./Weather/src/main.ts","./Weather/src/app/shared/city-list.component.ts","./Weather/src/app/shared/city-list.component.html","./Weather/src/app/shared/city-weather.component.ts","./Weather/src/app/shared/city-weather.component.html"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { City } from '../_models/city';\r\nimport { FavoriteService } from './favorite.service';\r\n\r\n@Component({\r\n  templateUrl: './favorite.component.html'\r\n})\r\nexport class FavoriteComponent implements OnInit {\r\n  favoriteList: City[];\r\n  selectedCity: City;\r\n\r\n  constructor(private _service: FavoriteService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadFavoriteList();\r\n  }\r\n\r\n  loadFavoriteList() {\r\n    this._service.getFavoriteList()\r\n      .then(r => this.favoriteList = r);\r\n  }\r\n\r\n  setCity(city: City) {\r\n    this.selectedCity = city;\r\n  }\r\n}\r\n","<div class=\"main container\">\r\n  <h1>Favorites</h1>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-8\">\r\n      <city-weather [city]=\"selectedCity\" [showRemoveFavorite]=\"true\" (favoritesChanged)=\"loadFavoriteList()\"></city-weather>\r\n    </div>\r\n    <div class=\"col-4\">\r\n      <city-list [cities]=\"favoriteList\" (citySelected)=\"setCity($event)\"></city-list>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Weather } from '../_models/Weather';\r\n\r\n@Injectable()\r\nexport class WeatherService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getWeather(cityId: number) {\r\n    let url: string = `api/Weather/${cityId}`;\r\n    return <Promise<Weather>>this.http.get(url).toPromise();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { City } from '../_models/city';\r\n\r\n@Injectable()\r\nexport class SearchService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  search(query: string): Promise<City[]> {\r\n    let url: string = `api/Search/${query}`;\r\n    return <Promise<City[]>>this.http.get(url).toPromise();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FavoriteComponent } from './favorite/favorite.component';\r\nimport { SearchComponent } from './search/search.component';\r\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'search', pathMatch: 'full' },\n  { path: 'search', component: SearchComponent },\n  { path: 'favorite', component: FavoriteComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Weather';\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <a class=\"navbar-brand\" href=\"#\">Weather</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n    <ul class=\"navbar-nav\">\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\"  routerLink=\"/search\">Search</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"/favorite\">Favorites</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n\r\n<router-outlet></router-outlet>\r\n","import { Component } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { City } from '../_models/city';\r\nimport { SearchService } from './search.service';\r\n\r\n@Component({\r\n  templateUrl: './search.component.html'\r\n})\r\nexport class SearchComponent {\r\n  submitted: boolean = false;\r\n  searchResults: City[];\r\n  query: string;\r\n\r\n  selectedCity: City;\r\n\r\n  constructor(private _service: SearchService,) {\r\n  }\r\n\r\n  search(form: NgForm) {\r\n    if (form.valid) {\r\n      this.submitted = false;\r\n\r\n      this._service.search(this.query)\r\n        .then(r => {\r\n          this.searchResults = r;\r\n        })\r\n    }\r\n    else\r\n      this.submitted = true;\r\n  }\r\n\r\n  setCity(city: City) {\r\n    this.selectedCity = city; \r\n  }\r\n}\r\n","<div class=\"main container\">\r\n  <h1>Search</h1>\r\n  <div class=\"row\">\r\n    <div class=\"col-8\">\r\n      <form #form=\"ngForm\" id=\"form\" (ngSubmit)=\"search(form)\" onkeydown=\"return event.key != 'Enter';\">\r\n        <div class=\"form-row\">\r\n          <div class=\"col\">\r\n            <input #city=\"ngModel\" [(ngModel)]=\"query\" name=\"city\" type=\"text\" placeholder=\"city\" class=\"form-control\" required />\r\n          </div>\r\n          <div class=\"col\">\r\n            <button class=\"btn btn-primary\">Search</button>\r\n          </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"city.invalid && city.errors.required && (submitted || city.touched)\" class=\"error\">\r\n          City name is missing.\r\n        </div>\r\n        <br />\r\n\r\n        <city-weather [city]=\"selectedCity\" [showAddFavorite]=\"true\"></city-weather>\r\n      </form>\r\n    </div>\r\n    <div class=\"col-4\">\r\n      <city-list [cities]=\"searchResults\" (citySelected)=\"setCity($event)\"></city-list>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { FavoriteComponent } from './favorite/favorite.component';\r\nimport { SearchComponent } from './search/search.component';\r\nimport { SearchService } from './search/search.service';\r\nimport { FavoriteService } from './favorite/favorite.service';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CityListComponent } from './shared/city-list.component';\r\nimport { CityWeatherComponent } from './shared/city-weather.component';\r\nimport { WeatherService } from './shared/weather.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent, FavoriteComponent, SearchComponent, CityListComponent, CityWeatherComponent \r\n  ],\r\n  imports: [\r\n    BrowserModule, AppRoutingModule, HttpClientModule, FormsModule\r\n  ],\r\n  providers: [FavoriteService, SearchService, WeatherService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { City } from '../_models/city';\r\n\r\n@Injectable()\r\nexport class FavoriteService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getFavoriteList(): Promise<City[]> {\r\n    let url: string = `api/Favorite`;\r\n    return <Promise<City[]>>this.http.get(url).toPromise();\r\n  }\r\n\r\n  addFavorite(city: City) {\r\n    let url: string = \"api/Favorite\";\r\n    return this.http.post(url, city).toPromise();\r\n  }\r\n\r\n  removeFavorite(city: City) {\r\n    let url: string = `api/Favorite/${city.key}`;\r\n    return this.http.delete(url).toPromise();\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"q4P0\";","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { City } from '../_models/city';\r\n\r\n@Component({\r\n  selector:'city-list',\r\n  templateUrl: './city-list.component.html'\r\n})\r\nexport class CityListComponent {\r\n  @Input() cities: City[];\r\n  @Output() citySelected = new EventEmitter<City>();\r\n\r\n  select(city) {\r\n    this.citySelected.emit(city);\r\n  }\r\n}\r\n","<div>\r\n  <ul>\r\n    <li *ngFor=\"let city of cities\" (click)=\"select(city)\">{{city.localizedName}}</li>\r\n  </ul>\r\n</div>\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { FavoriteService } from '../favorite/favorite.service';\r\nimport { City } from '../_models/city';\r\nimport { Weather } from '../_models/Weather';\r\nimport { WeatherService } from './weather.service';\r\n\r\n@Component({\r\n  selector:'city-weather',\r\n  templateUrl: './city-weather.component.html'\r\n})\r\nexport class CityWeatherComponent {\r\n  @Output() favoritesChanged = new EventEmitter();\r\n\r\n  @Input() showAddFavorite: boolean;\r\n  @Input() showRemoveFavorite: boolean;\r\n\r\n  @Input() set city(city: City) {\r\n    if (city != null) {\r\n      this.currentCity = city;\r\n      this.loadWeatherForCity(city)\r\n    }\r\n  };\r\n\r\n  currentCity: City;\r\n  currentWeather: Weather;\r\n\r\n  constructor(private weatherService: WeatherService, private favoriteService: FavoriteService) {\r\n  }\r\n\r\n  loadWeatherForCity(city:City) {\r\n    this.weatherService.getWeather(city.key)\r\n      .then(r => this.currentWeather=r)\r\n  }\r\n\r\n  addToFavorites() {\r\n    this.favoriteService.addFavorite(this.currentCity)\r\n      .finally(() => this.favoritesChanged.emit());\r\n  }\r\n\r\n  removeFromFavorites() {\r\n    this.favoriteService.removeFavorite(this.currentCity)\r\n      .finally(() => this.favoritesChanged.emit());\r\n  }\r\n}\r\n","<div class=\"container\" *ngIf=\"currentCity\">\r\n  <div class=\"row\">\r\n    <div class=\"col-6\">\r\n      <div> \r\n        {{currentCity.localizedName}}\r\n      </div>\r\n      <div *ngIf=\"currentWeather\">\r\n        {{currentWeather.weather}}\r\n        {{currentWeather.weatherText}}\r\n      </div>\r\n    </div>\r\n    <div class=\"col-6\">\r\n      <button type=\"button\" *ngIf=\"showAddFavorite\" (click)=\"addToFavorites()\" class=\"btn btn-outline-primary\">Add to Favorites</button>\r\n      <button type=\"button\" *ngIf=\"showRemoveFavorite\" (click)=\"removeFromFavorites()\" class=\"btn btn-outline-primary\">Remove From Favorites</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n"],"sourceRoot":"webpack:///"}